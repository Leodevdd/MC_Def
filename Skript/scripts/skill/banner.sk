function drawParticle(ploc: locations):
	loop 10 times:
		loop {_ploc::*}:
			draw 1 dust_color_transition using dustTransition(yellow, white, 2) at loop-value-2 with force
			#play sound "block.deepslate.place" with volume 0.2 at loop-value-2
			wait 1 tick

on place:
	if event-block is white banner or white wall banner:
		broadcast "test banner skill"

		set {_loc} to event-location
		set {_pitch} to pitch of {_loc} # 상하 시야각
		set {_yaw} to yaw of {_loc} # 좌우 시야각

		set {_vectorFace} to vector from yaw {_yaw} and pitch {_pitch} - 90
		set {_vectorVertical} to vector from yaw {_yaw} and pitch {_pitch} #90 is max radius
		set standard length of {_vectorVertical} to 4
		add 0 to {_loc}'s y-coordinate

		# 1번 circle 파티클
		loop 36 times:
			add {_loc} ~ {_vectorVertical} to {_particleLocation::*}
			#add 0.1 to {_loc}'s y-coordinate
			rotate {_vectorVertical} around {_vectorFace} by -10

		# 2번 파티클 (180도 반대)
		add -180 to {_vectorVertical}'s yaw
		loop 36 times:
			add {_loc} ~ {_vectorVertical} to {_particleLocation2::*}
			rotate {_vectorVertical} around {_vectorFace} by -10

		drawParticle({_particleLocation::*})
		drawParticle({_particleLocation2::*})

		loop 20 times:
			loop all living entities in radius 4 of event-location:
				if loop-entity is player:
					if chance of 30%:
						apply regeneration 1 to loop-value-2 for 2.5 second replacing existing effect
				else:
					#apply instant health 1 to loop-value-2 for 0.1 second
					set {_tmpKB} to loop-entity's knockback resistance attribute
					set loop-entity's knockback resistance attribute to 1
					
					set {damageDelayPass.%player's uuid%::%loop-entity's uuid%} to true
					force player to damage loop-entity by 1
					#noDmgDelay(loop-entity)


					#damage loop-entity by 1
					set loop-entity's knockback resistance attribute to {_tmpKB}
			wait 0.9 seconds
		
		set block at event-location to air

		

on place:
	if event-block is black banner:
		#drawRings particle "redstone", RGB 80, 255, 255, center player, id "%player%", rainbowMode true, randomRotation true, animated true, radius 10, ringCount 4, ringDensity 10, visibleRange 32, pulseDelay 2
		#drawRings particle "redstone", RGB 80, 255, 255, center player, id "%player%", randomRotation true, animated true, radius 4, ringCount 1, ringDensity 10, visibleRange 32, pulseDelay 2
		#drawSimpleHalo particle "redstone", center player, id "bd1", rainbowmode false, solid true, visibleRange 30, tps 0.1, second 1
		#drawWarpRings style 1, particle "redstone", RGB 80, 255, 255, center location of block at player, id "%player%", rainbowMode false, scan true, height 2, radius 2, ringCount 40, ringDensity 20, visibleRange 32, pulseDelay 2 
		#drawLine particle redstone, RGB 0, 139, 139, center player, target location at target block, id "%player's location%", solid true, density 50, visibleRange 50, pulseDelay 1
		broadcast "id: {%player%}"